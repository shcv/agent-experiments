#+TITLE: Claude Code Terminal Notifications and Alarms
#+DATE: 2025-07-19

* Overview

Claude Code supports terminal notifications to alert users when input is needed. The system is configurable and supports multiple terminal types with automatic detection.

* When Notifications Are Sent

** Primary Use Case: Waiting for Input
- **Trigger**: When Claude has been idle waiting for user input
- **Default Threshold**: 60 seconds (60000ms)
- **Message**: "Claude is waiting for your input"

** Other Notifications
- Login success notifications
- Custom notifications via hooks or extensions
- Error or completion notifications (implementation-dependent)

* Notification Channels

** Available Channels

| Channel | Description | Method |
|---------+-------------+--------|
| =auto= | Automatic terminal detection (default) | Varies by terminal |
| =terminal_bell= | Standard ASCII bell | =\x07= character |
| =iterm2= | iTerm2 notifications | OSC 9 sequence |
| =iterm2_with_bell= | iTerm2 + bell sound | Both methods |
| =kitty= | Kitty terminal notifications | OSC 99 sequence |
| =ghostty= | Ghostty terminal notifications | OSC 777 sequence |
| =notifications_disabled= | No notifications | Silent |

** Terminal Detection (Auto Mode)

When =preferredNotifChannel= is set to =auto=, Claude Code detects:
- Apple Terminal → Uses terminal bell
- iTerm2 → Uses iTerm2 notifications
- Kitty → Uses Kitty notifications
- Ghostty → Uses Ghostty notifications
- Others → Falls back to terminal bell

* Configuration

** User Settings

The notification channel is stored in user configuration:
#+begin_src javascript
{
  preferredNotifChannel: "auto",  // Default
  messageIdleNotifThresholdMs: 60000  // 1 minute default
}
#+end_src

** Changing Notification Settings

Users can configure notifications through:
1. The settings interface (likely via a command)
2. Direct configuration file editing
3. Environment variables (if supported)

** Custom Notification Command

Claude Code also supports a =customNotifyCommand= for users who want to use system-specific notification tools.

* Implementation Details

** Terminal Bell
#+begin_src javascript
// Sends ASCII bell character
process.stdout.write("\x07");
#+end_src

** iTerm2 Notifications
#+begin_src javascript
// OSC 9 - Display notification
process.stdout.write(`\x1B]9;\n${message}\x07`);
#+end_src

** Kitty Notifications
#+begin_src javascript
// OSC 99 - Kitty notify protocol
process.stdout.write(`\x1B]99;i=${id}:d=0:p=title;${title}\x1B\\`);
process.stdout.write(`\x1B]99;i=${id}:p=body;${message}\x1B\\`);
#+end_src

** Ghostty Notifications
#+begin_src javascript
// OSC 777 - Ghostty notify protocol
process.stdout.write(`\x1B]777;notify;${title};${message}\x07`);
#+end_src

* Terminal-Specific Behavior

** macOS Terminal.app
- Uses standard terminal bell
- Can be configured to use visual bell instead of audio
- Claude Code can automatically configure Terminal.app to use visual bell

** iTerm2
- Supports native notifications that appear in macOS Notification Center
- Can combine with terminal bell for audio feedback
- Notifications can be clicked to focus the terminal

** Kitty
- Rich notification support with actions
- Can include "focus" action to bring terminal to front
- Supports notification IDs for updating/replacing

** Ghostty
- Simple notification protocol
- Integrates with system notification service

** Windows Terminal
- Standard terminal bell support
- May use Windows notification system (implementation-dependent)

* Disabling Notifications

To disable all notifications:
1. Set =preferredNotifChannel= to =notifications_disabled=
2. Or increase =messageIdleNotifThresholdMs= to a very high value
3. Or configure your terminal to ignore bell characters

* Best Practices

1. **Respect User Preferences**: Always use the configured notification channel
2. **Avoid Overuse**: Only notify for important events (like waiting for input)
3. **Test Terminal Support**: Not all terminals support all notification types
4. **Provide Fallbacks**: Auto mode ensures compatibility
5. **Consider Accessibility**: Visual bells help hearing-impaired users

* Common Issues and Solutions

** No Sound on macOS
- Check System Preferences → Sound → Sound Effects
- Ensure "Enable sound effects" is checked
- Terminal.app may have bell disabled in preferences

** Notifications Not Appearing
- Verify terminal supports the selected notification type
- Check system notification permissions
- Try =terminal_bell= as a fallback

** Too Many Notifications
- Increase =messageIdleNotifThresholdMs= value
- Change to =notifications_disabled=
- Configure terminal to limit bell frequency

* Technical Notes

1. **Character Encoding**: The bell character (=\x07=) is ASCII 7 (BEL)
2. **OSC Sequences**: Operating System Command sequences vary by terminal
3. **Buffering**: Notifications bypass normal stdout buffering
4. **Permissions**: Some systems require notification permissions
5. **Rate Limiting**: Some terminals limit bell frequency automatically

* Future Considerations

Potential enhancements could include:
- System notification integration (native OS notifications)
- Customizable notification messages
- Different notifications for different events
- Sound file support for custom alerts
- Integration with focus/attention APIs

However, these depend on terminal capabilities and cross-platform considerations.